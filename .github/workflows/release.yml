name: Release

on:
  workflow_dispatch:
    inputs:
      make-release:
        description: 'Make a release'
        required: true
        default: 'false'
        type: boolean
      bump:
        description: 'Version bump type (applies if make-release is true)'
        required: true
        default: 'PATCH'
        type: choice
        options:
        - PATCH
        - MINOR
        - MAJOR
      publish-pypi:
        description: 'Publish to PyPI'
        required: true
        default: 'false'
        type: boolean

jobs:
  release:
    runs-on: ubuntu-latest
    environment: NearAI Langchain
    steps:

    - name: Generate a token
      id: generate-token
      uses: actions/create-github-app-token@v1.11.0
      with:
        app-id: ${{ secrets.APP_ID }}
        private-key: ${{ secrets.APP_PRIVATE_KEY }}

    - name: Ensure NearAIBot status
      run: |
        echo "${{ steps.generate-token.outputs.token }}" | gh auth login --with-token
        gh auth setup-git
        gh auth status
    
    - name: Set git config for commit identity
      run: |
        git config --global user.email "nearaibot[bot]@users.noreply.github.com"
        git config --global user.name "nearaibot[bot]"

    - name: Checkout repository
      uses: actions/checkout@v3
      with:
        token: ${{ steps.generate-token.outputs.token }}
        fetch-depth: 0
        persist-credentials: false

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
        
    - name: Install poetry
      run: pipx install poetry

    - name: Install Codespell
      run: pip install codespell

    - name: Run Codespell
      run: codespell --config .codespellrc

    - name: check lock file for inconsistencies
      run: poetry check --lock

    - name: Install dependencies
      run: poetry install

    - name: Lint Check
      run: ./scripts/lint_check.sh

    - name: Format Check
      run: ./scripts/format_check.sh

    - name: Type Check
      run: ./scripts/type_check.sh

    - name: Bump version and generate changelog
      uses: commitizen-tools/commitizen-action@master
      with:
        github_token: ${{ steps.generate-token.outputs.token }}
        changelog_increment_filename: body.md
        increment: ${{ github.event.inputs.bump }}
      if: ${{ github.event.inputs.make-release == 'true' }}

    - name: Create release
      uses: actions/create-release@v1
      with:
        tag_name: ${{ env.REVISION }}
        body_path: "body.md"
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ steps.generate-token.outputs.token }}
      if: ${{ github.event.inputs.make-release == 'true' }}
    
    - name: Build package
      run: poetry build
      if: ${{ github.event.inputs.publish-pypi == 'true' }}

    - name: Verify PyPI token is set
      run: |
        if [ -z "$POETRY_PYPI_TOKEN_PYPI" ]; then
          echo "PyPI token is not set"
          exit 1
        else
          echo "PyPI token is set"
        fi
      env:
        POETRY_PYPI_TOKEN_PYPI: ${{ secrets.POETRY_PYPI_TOKEN_PYPI }}
      if: ${{ github.event.inputs.publish-pypi == 'true' }}
      
    - name: Publish to PyPI
      env:
        POETRY_PYPI_TOKEN_PYPI: ${{ secrets.POETRY_PYPI_TOKEN_PYPI }}
      run: poetry publish
      if: ${{ github.event.inputs.publish-pypi == 'true' }}
